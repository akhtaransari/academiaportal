package com.leucine.academiaportal.entity;

import com.leucine.academiaportal.enums.Role;
import jakarta.persistence.*;
import jakarta.validation.constraints.Email;
import jakarta.validation.constraints.NotBlank;
import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Size;
import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;

/**
 * Entity class representing a user in the system.
 * This entity is mapped to the 'user' table in the database.
 */
@Entity
@Data
@NoArgsConstructor
@AllArgsConstructor
public class User {

    /**
     * Primary key for the User entity.
     * Automatically generated by the database.
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;

    /**
     * Username of the user.
     * This field is required and must be unique.
     */
    @Column(nullable = false, unique = true)
    @NotBlank(message = "Username cannot be blank")
    private String username;

    /**
     * Password of the user.
     * This field is required.
     */
    @Column(nullable = false)
    @NotBlank(message = "Password cannot be blank")
    private String password;

    /**
     * Role of the user.
     * This field is required and uses an enumerated type.
     */
    @Enumerated(EnumType.STRING)
    @Column(nullable = false)
    @NotNull(message = "Role cannot be null")
    private Role role;

    /**
     * Full name of the user.
     * This field is required.
     */
    @Column(nullable = false)
    @NotBlank(message = "Name cannot be blank")
    private String name;

    /**
     * Email address of the user.
     * This field is required, must be unique, and must be a valid email format.
     */
    @Column(nullable = false, unique = true)
    @NotBlank(message = "Email cannot be blank")
    @Email(message = "Email should be valid")
    private String email;

    /**
     * Phone number of the user.
     * This field is optional and can be null.
     */
    @Size(max = 15, message = "Phone number must be less than 15 characters")
    private String phone;

}
